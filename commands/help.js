import { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';

export default {
    data: new SlashCommandBuilder()
        .setName('help')
        .setDescription('Show all available commands and usage instructions'),
    
    async execute(interaction) {
        const embed = new EmbedBuilder()
            .setTitle('ü§ñ Discord Monitor Bot - Help')
            .setDescription('Advanced bot monitoring system with real-time presence tracking')
            .addFields(
                {
                    name: 'üìã Available Commands',
                    value: '```\n/addbot <bot_id>    - Add a bot to monitoring\n/removebot <bot_id> - Remove a bot from monitoring\n/help              - Show this help menu\n```',
                    inline: false
                },
                {
                    name: 'üéØ How to Use',
                    value: '‚Ä¢ Use `/addbot` with a bot\'s User ID to start monitoring\n‚Ä¢ The system will automatically track online/offline status\n‚Ä¢ Use `/removebot` to stop monitoring a specific bot\n‚Ä¢ Status changes are posted in real-time with rich embeds',
                    inline: false
                },
                {
                    name: '‚ú® Features',
                    value: '‚Ä¢ **Real-time monitoring** - 30-second refresh intervals\n‚Ä¢ **Rich embeds** - Bot avatars, banners, and status colors\n‚Ä¢ **Interactive buttons** - Quick actions and profile links\n‚Ä¢ **Persistent storage** - MongoDB database integration\n‚Ä¢ **Error handling** - Rate-limit safe with proper logging',
                    inline: false
                },
                {
                    name: 'üîß Status Indicators',
                    value: 'üü¢ **Online** - Bot is active and responsive\nüî¥ **Offline** - Bot is disconnected or inactive\n‚ö™ **Unknown** - Status cannot be determined',
                    inline: false
                },
                {
                    name: 'üí° Pro Tips',
                    value: '‚Ä¢ Right-click a bot ‚Üí Copy ID to get their User ID\n‚Ä¢ The bot must be in the same server to track presence\n‚Ä¢ Status changes are logged with timestamps\n‚Ä¢ Use buttons in status messages for quick actions',
                    inline: false
                }
            )
            .setColor(0x5865f2)
            .setThumbnail(interaction.client.user.displayAvatarURL({ dynamic: true, size: 256 }))
            .setTimestamp()
            .setFooter({ 
                text: 'Monitor System v1.0 | Made with ‚ù§Ô∏è', 
                iconURL: interaction.client.user.displayAvatarURL() 
            });
        
        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setLabel('Add Bot')
                    .setStyle(ButtonStyle.Success)
                    .setCustomId('help_addbot')
                    .setEmoji('‚ûï'),
                new ButtonBuilder()
                    .setLabel('Support Server')
                    .setStyle(ButtonStyle.Link)
                    .setURL('https://discord.gg/your-support-server')
                    .setEmoji('‚ùì'),
                new ButtonBuilder()
                    .setLabel('Documentation')
                    .setStyle(ButtonStyle.Link)
                    .setURL('https://github.com/your-repo/discord-monitor-bot')
                    .setEmoji('üìö')
            );
        
        await interaction.reply({ embeds: [embed], components: [row] });
    }
};
